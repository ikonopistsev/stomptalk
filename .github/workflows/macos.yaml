name: macos
on: [push, pull_request]

jobs:
  build:
    name: macOS Build
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install cmake ninja

      - name: Configure CMake
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCMAKE_CXX_FLAGS="-Wall -Wextra -Werror" \
            -DSTOMPTALK_BUILD_TESTS=ON

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }} --verbose

      - name: Run tests
        run: ctest --test-dir build --output-on-failure
          buildWithCMakeArgs: '-- -v'
          buildDirectory: '${{ runner.workspace }}/b/ninja/'
      - name: Run CMake+Ninja with triplet (cmd)
        uses: lukka/run-cmake@v2
        id: runcmake_cmd
        with:
          cmakeGenerator: 'Ninja'  
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          vcpkgTriplet: ${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}
          buildDirectory: '${{ runner.workspace }}/b/ninja/'
      - name: Run CMake+Ninja with triplet (bash)
        if: false
        uses: lukka/run-cmake@v2
        id: runcmake_bash
        with:
          cmakeGenerator: 'Ninja'  
          cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
          cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
          useVcpkgToolchainFile: true
          buildWithCMakeArgs: '-- -v'
          vcpkgTriplet: ${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_TRIPLET_OUT }}
          buildDirectory: '${{ runner.workspace }}/b/ninja-bash/'
          useShell: bash
